{{- if and .Values.deployments.agents (gt (.Values.master.replicaCount | int64) 0) -}}
{{- $volumeClaim := .Values.volumeClaim | default dict -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "imply.master.fullname" . }}
  labels:
{{ include "imply.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.master.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "imply.master.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "imply.master.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        imply.io/resource: "true"
      {{- with .Values.master.labels }}
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.master.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.agents.terminationGracePeriodSeconds }}
    {{- with .Values.images.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.master.serviceAccountName }}
      serviceAccountName: {{ .Values.master.serviceAccountName }}
    {{- end }}
    {{- if .Values.master.schedulerName }}
      schedulerName: {{ .Values.master.schedulerName }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.images.agent.repository }}:{{ .Values.images.agent.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}

          env:
            - name: IMPLY_MANAGER_HOST
              value: "{{ tpl .Values.agents.managerHost . }}"
            - name: IMPLY_MANAGER_AGENT_CLUSTER
              value: {{ .Values.agents.clusterName }}
            - name: IMPLY_MANAGER_AGENT_NODE_TYPE
              value: master
          {{- if .Values.security.tls }}
            - name: IMPLY_MANAGER_CA_CERT_PATH
              value: /etc/imply/ca/tls.crt
          {{- end }}
          {{- if .Values.security.auth }}
            - name: IMPLY_MANAGER_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.security.auth.secretName }}
                  key: auth-token
          {{- end }}
            - name: druid_common_runtime_druid_host
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- with .Values.master.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}

          ports:
            - name: coordinator
              containerPort: 8081
            - name: coordinator-tls
              containerPort: 8281
            - name: overlord
              containerPort: 8090
            - name: overlord-tls
              containerPort: 8290
          {{- if .Values.master.extraPorts }}
            {{- toYaml .Values.master.extraPorts | nindent 12 }}
          {{- end }}

          volumeMounts:
            - mountPath: "/mnt/var"
              name: var-volume
          {{- if .Values.security.tls }}
            - mountPath: "/etc/imply/ca"
              name: ca-secrets
              readOnly: true
          {{- end }}
          {{- if $volumeClaim.enabled }}
            - mountPath: {{ .Values.volumeClaim.mountPath }}
              name: deep-storage
          {{- end }}
          {{- with .Values.master.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}

          livenessProbe:
{{ include "imply.probe.livenessProbe" . | indent 12 }}
          readinessProbe:
{{ include "imply.probe.readinessProbe" . | indent 12 }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - /root/remove-node -c "{{ .Values.agents.clusterName }}" {{ ternary "" "-s" (empty .Values.security.tls) }}
          resources:
            {{- toYaml .Values.master.resources | nindent 12 }}

      volumes:
        - name: var-volume
          emptyDir: {}
      {{- if .Values.security.tls }}
        - name: ca-secrets
          secret:
            secretName: {{ .Values.security.tls.secretName }}
            items:
              - key: tls.crt
                path: tls.crt
      {{- end }}
      {{- if $volumeClaim.enabled }}
        - name: deep-storage
          persistentVolumeClaim:
            claimName: {{ include "imply.storage.fullname" . }}
      {{- end }}
      {{- with .Values.master.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.master.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.master.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.master.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
