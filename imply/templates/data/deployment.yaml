{{- $tierDict := dict "dataTierValues" .Values.dataTier1 -}}
{{- $_ := set $tierDict "dataTierType" "dataTier1" -}}
{{- $_ := set $tierDict "dataTierName" (include "imply.dataTier1.name" .) -}}
{{- $_ := set $tierDict "dataTierFullName" (include "imply.dataTier1.fullname" .) -}}
{{ include "imply.data.deployment" (merge (dict) . $tierDict) }}
---
{{- $tierDict := dict "dataTierValues" .Values.dataTier2 -}}
{{- $_ := set $tierDict "dataTierType" "dataTier2" -}}
{{- $_ := set $tierDict "dataTierName" (include "imply.dataTier2.name" .) -}}
{{- $_ := set $tierDict "dataTierFullName" (include "imply.dataTier2.fullname" .) -}}
{{ include "imply.data.deployment" (merge (dict) . $tierDict) }}
---
{{- $tierDict := dict "dataTierValues" .Values.dataTier3 -}}
{{- $_ := set $tierDict "dataTierType" "dataTier3" -}}
{{- $_ := set $tierDict "dataTierName" (include "imply.dataTier3.name" .) -}}
{{- $_ := set $tierDict "dataTierFullName" (include "imply.dataTier3.fullname" .) -}}
{{ include "imply.data.deployment" (merge (dict) . $tierDict) }}
---
{{- define "imply.data.deployment" -}}
{{- if and .Values.deployments.agents (gt (.dataTierValues.replicaCount | int64) 0) -}}
{{- $volumeClaim := .Values.volumeClaim | default dict -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .dataTierFullName }}
  labels:
{{ include "imply.labels" . | indent 4 }}
spec:
  replicas: {{ .dataTierValues.replicaCount }}
  serviceName: {{ .dataTierFullName }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .dataTierName }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .dataTierName }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        imply.io/resource: "true"
      {{- with .dataTierValues.labels }}
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .dataTierValues.annotations }}
      annotations:
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.agents.terminationGracePeriodSeconds }}
    {{- with .Values.images.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .dataTierValues.serviceAccountName }}
      serviceAccountName: {{ .dataTierValues.serviceAccountName }}
    {{- end }}
    {{- if .dataTierValues.schedulerName }}
      schedulerName: {{ .dataTierValues.schedulerName }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.images.agent.repository }}:{{ .Values.images.agent.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}

          env:
            - name: IMPLY_MANAGER_HOST
              value: "{{ tpl .Values.agents.managerHost . }}"
            - name: IMPLY_MANAGER_AGENT_CLUSTER
              value: {{ .Values.agents.clusterName }}
            - name: IMPLY_MANAGER_AGENT_NODE_TYPE
              value: {{ .dataTierType }}
          {{- if .Values.security.tls }}
            - name: IMPLY_MANAGER_CA_CERT_PATH
              value: /etc/imply/ca/tls.crt
          {{- end }}
          {{- if .Values.security.auth }}
            - name: IMPLY_MANAGER_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.security.auth.secretName }}
                  key: auth-token
          {{- end }}
            - name: druid_common_runtime_druid_host
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- with .dataTierValues.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}

          ports:
            - name: historical
              containerPort: 8083
            - name: historical-tls
              containerPort: 8283
            - name: mm
              containerPort: 8091
            - name: mm-tls
              containerPort: 8291

          volumeMounts:
            - mountPath: "/mnt/var"
              name: var
            - mountPath: "/mnt/tmp"
              name: tmp
          {{- if .Values.security.tls }}
            - mountPath: "/etc/imply/ca"
              name: ca-secrets
              readOnly: true
          {{- end }}
          {{- if $volumeClaim.enabled }}
            - mountPath: {{ .Values.volumeClaim.mountPath }}
              name: deep-storage
          {{- end }}
          {{- with .dataTierValues.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}

          livenessProbe:
{{ include "imply.probe.livenessProbe" . | indent 12 }}
          readinessProbe:
{{ include "imply.probe.readinessProbe" . | indent 12 }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - /root/remove-node -c "{{ .Values.agents.clusterName }}" {{ ternary "" "-s" (empty .Values.security.tls) }}
          resources:
            {{- toYaml .dataTierValues.resources | nindent 12 }}

      volumes:
      {{- if .Values.security.tls }}
        - name: ca-secrets
          secret:
            secretName: {{ .Values.security.tls.secretName }}
            items:
              - key: tls.crt
                path: tls.crt
      {{- end }}
      {{- if $volumeClaim.enabled }}
        - name: deep-storage
          persistentVolumeClaim:
            claimName: {{ include "imply.storage.fullname" . }}
      {{- end }}
      {{- with .dataTierValues.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .dataTierValues.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .dataTierValues.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .dataTierValues.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
{{- if .dataTierValues.persistence.enabled }}
  - metadata:
      name: var
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        {{- toYaml .dataTierValues.segmentCacheVolume.resources | nindent 8 }}
      {{- with .dataTierValues.segmentCacheVolume.selector }}
      selector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      storageClassName: {{ .dataTierValues.segmentCacheVolume.storageClassName }}
  - metadata:
      name: tmp
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        {{- toYaml .dataTierValues.tmpVolume.resources | nindent 8 }}
      {{- with .dataTierValues.tmpVolume.selector }}
      selector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      storageClassName: {{ .dataTierValues.tmpVolume.storageClassName }}
{{- end }}
  {{- with .dataTierValues.extraVolumeClaimTemplates }}
{{ toYaml . | indent 2 }}
  {{- end }}
{{- end }}
{{- end -}}
